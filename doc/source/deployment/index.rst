Continuous Deployment
=====================

Partly out of a need for parsimony and partly out of the author's genuine interest in being able to get things done while consuming the fewest resources possible, most of this application is hosted on `Heroku`_.

.. _Heroku: https://dashboard.heroku.com/


The Pipeline
------------

`Heroku`_ hosts a single pipeline that receives new commits and deploys them either to a development environment or to one of two production environments.  All of these environments are hosted on `Heroku`_, which makes managing the deployment pipeline easy.  


Environments
............

There are three stages to the deployment.  The first is the request app which is generated by `Heroku`_ whenever a pull request is created on GitHub.  This will create a temporary instance then build the application on it and notify the pull request on GitHub of any errors.  This application remains open will be built on new commits to the pull request until the pull request is closed. 

Once the pull request is closed, the branch in which the changes have been merged is built and deployed to a production environment.  There are currently two production environments: `jess`_ and `xander`_, one each for the each résumé that the application currently hosts.

.. _jess: https://jess.gahan-corporation.com

.. _xander: https://xander.gahan-corporation.com


Finally, there is a staging/development environment hosted on `Heroku`_, `rsum-dev`_.

.. _rsum-dev: https://rsum-dev.gahan-corporation.com


This environment receives all updates pushed to issue branches as they are developed with the use some very simple bash trickery. 

.. code-block:: bash

   alias gp='git push origin $(git rev-parse --abbrev-ref HEAD); git push heroku $(git rev-parse --abbrev-ref HEAD):master'

This is placed in the user's .bashrc file.


Static Files
------------

Currently static files are kept on an Ubuntu 16.04 EC2 instance.  They are served via an NGINX proxy that forwards requests for non-static content on to the appropriate Heroku app. 

Static files should be served through S3 instead and deployment of changes to them should be automated. 
