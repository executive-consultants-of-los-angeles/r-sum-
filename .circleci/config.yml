---
# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    machine: true
    steps:
      - run: >
          docker run --name pg.gc -h pg.gc --network rsum
          -p 5432:5432 postgres:alpine
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "bin/.requirements" }}
            # fallback to using the latest cache if no exact match is found
            # - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r bin/.requirements
            pip install pytest pytest-runner coverage pytest-django
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "bin/.requirements" }}
      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest
      - store_test_results:
          path: /tmp/junit.xml
      - store_artifacts:
          path: test-reports
          destination: test-reports
    working_directory: ~/repo
...
