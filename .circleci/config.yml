---
version: 2
jobs:
  build:
    machine: true
    steps:
      - run:
        name: create rsum network
          docker network create rsum || true
      - run:
        name: run postgres container
          docker run -d --rm --name postgres -h postgres --network rsum
          -p 5432:5432 postgres:alpine
      - run:
        name: add dev user
        command: docker exec --user postgres postgres createuser -s dev
      - checkout
      - run:
          name: build container
          command: |
            docker build -t rsum bin
      - run:
          name: check aws
          command: |
            ls -lah /home/circleci
      - run:
          name: run container 
          command: |
            docker run -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e\
            AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
            --network rsum -v $(pwd)/test-results:/tmp:rw \
            --rm -d --name rsum rsum
            docker network connect rsum postgres || true 
            docker network connect rsum rsum || true 
            docker exec rsum ping -c 3 postgres
      - run:
          name: code climate
          command: |
            docker exec rsum wget https://codeclimate.com/downloads/\
            test-reporter/test-reporter-latest-linux-amd64 -O \
            /usr/bin/cc-test-reporter
            docker exec rsum chmod +x /usr/bin/cc-test-reporter
      - run:
          name: run coverage
          command: |
            docker exec rsum pip install coverage
            docker exec rsum /usr/bin/cc-test-reporter before-build
            docker exec rsum coverage run setup.py test
            docker exec rsum coverage xml
            docker exec rsum cp coverage.xml /tmp/coverage.xml
            docker exec rsum /usr/bin/cc-test-reporter \
            after-build -t coverage.py
      - run:
          name: run pytest
          command: |
            docker exec rsum mkdir -p /tmp/rsum
            docker exec rsum pytest --junit-xml=/tmp/rsum/circle.xml
      - store_test_results:
          path: test-results
deployment:
  staging:
    branch: /iss*/
    heroku:
      appname: rsum-dev
...
